name: Reusable Release Workflow

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "Directory from which this pipeline executes"
      component-path:
        required: true
        type: string
        description: "Relative path to the component being released"
    secrets:
      GITHUB_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true

env:
  POETRY_VERSION: "1.5.1"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pip install poetry==$POETRY_VERSION
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Build project for distribution
        run: ${{ inputs.build_cmd }}
      - name: Check Version
        id: check-version
        run: |
          echo "version=$(poetry version --short)" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          generateReleaseNotes: true
          tag: v${{ steps.check-version.outputs.version }}
          commit: main
      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry publish
