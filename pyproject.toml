[tool.poetry]
name = "langflow"
version = "0.6.0a0"
description = "A Python package with a built-in web application"
authors = ["Logspace <contact@logspace.ai>"]
maintainers = [
    "Carlos Coelho <carlos@logspace.ai>",
    "Cristhian Zanforlin <cristhian.lousa@gmail.com>",
    "Gabriel Almeida <gabriel@logspace.ai>",
    "Gustavo Schaedler <gustavopoa@gmail.com>",
    "Igor Carvalho <igorr.ackerman@gmail.com>",
    "Lucas Eduoli <lucaseduoli@gmail.com>",
    "Ot√°vio Anovazzi <otavio2204@gmail.com>",
    "Rodrigo Nader <rodrigo@logspace.ai>",
]
repository = "https://github.com/logspace-ai/langflow"
license = "MIT"
readme = "README.md"
keywords = ["nlp", "langchain", "openai", "gpt", "gui"]
packages = [{ include = "langflow", from = "src/backend" }]
include = ["src/backend/langflow/*", "src/backend/langflow/**/*"]
documentation = "https://docs.langflow.org"

[tool.poetry.scripts]
langflow = "langflow.__main__:main"

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
fastapi = "^0.104.0"
httpx = "*"
uvicorn = "^0.24.0"
gunicorn = "^21.2.0"
langchain = "~0.0.338"
sqlmodel = { git = "https://github.com/honglei/sqlmodel.git", branch = "main" }
loguru = "^0.7.1"
rich = "^13.7.0"
langchain-experimental = "*"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.3"
websockets = "^10.3"
typer = "^0.9.0"
cachetools = "^5.3.1"
platformdirs = "^4.0.0"
python-multipart = "^0.0.6"
orjson = "^3.9.3"
alembic = "^1.12.0"
passlib = "^1.7.4"
bcrypt = "^4.0.1"
pillow = "^10.1.0"
docstring-parser = "^0.15"
python-jose = "^3.3.0"
pandas = "2.0.3"
multiprocess = "^0.70.14"
beautifulsoup4 = { version = "^4.12.2", optional = true }
google-search-results = { version = "^2.4.1", optional = true }
google-api-python-client = { version = "^2.79.0", optional = true }
openai = { version = "^1.2.0", optional = true }
chromadb = { version = "^0.4.0", optional = true }
huggingface-hub = { version = "^0.19.0", extras = [
    "inference",
], optional = true }
llama-cpp-python = { version = "~0.2.0", optional = true }
networkx = { version = "^3.1", optional = true }
unstructured = { version = "^0.10.0", optional = true }
pypdf = { version = "^3.17.0", optional = true }
lxml = { version = "^4.9.2", optional = true }
pysrt = { version = "^1.1.2", optional = true }
fake-useragent = { version = "^1.3.0", optional = true }
psycopg2-binary = { version = "^2.9.6", optional = true }
pyarrow = { version = "^14.0.0", optional = true }
tiktoken = { version = "~0.5.0", optional = true }
wikipedia = { version = "^1.4.0", optional = true }
qdrant-client = { version = "^1.4.0", optional = true }
weaviate-client = { version = "^3.23.0", optional = true }
jina = { version = "3.15.0", optional = true }
sentence-transformers = { version = "^2.2.2", optional = true }
ctransformers = { version = "^0.2.10", optional = true }
cohere = { version = "^4.36.0", optional = true }
# install sqlmodel using https://github.com/honglei/sqlmodel.git
faiss-cpu = { version = "^1.7.4", optional = true }
anthropic = { version = "^0.7.0", optional = true }
pinecone-client = { version = "^2.2.2", optional = true }
pymongo = { version = "^4.6.0", optional = true }
supabase = { version = "*", optional = true }
certifi = { version = "^2023.5.7", optional = true }
google-cloud-aiplatform = { version = "^1.36.0", optional = true }
psycopg = { version = "^3.1.9", optional = true }
psycopg-binary = { version = "^3.1.9", optional = true }
fastavro = { version = "^1.8.0", optional = true }
celery = { extras = ["redis"], version = "^5.3.1", optional = true }
redis = { version = "^4.6.0", optional = true }
flower = { version = "^2.0.0", optional = true }
metaphor-python = { version = "^0.1.11", optional = true }
zep-python = { version = "^1.4.0", optional = true }
pywin32 = { version = "^306", markers = "sys_platform == 'win32'", optional = true }
langfuse = { version = "^1.1.11", optional = true }
metal-sdk = { version = "^2.5.0", optional = true }
markupsafe = { version = "^2.1.3", optional = true }
extract-msg = { version = "^0.46.0", optional = true }
jq = { version = "^1.6.0", optional = true }
boto3 = { version = "^1.29.0", optional = true }
numexpr = { version = "^2.8.6", optional = true }
qianfan = { version = "0.2.0", optional = true }
pgvector = { version = "^0.2.3", optional = true }


[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.21.1"
types-redis = "^4.6.0.5"
types-cachetools = { version = "^5.3.0.5", optional = true }
ipykernel = "^6.21.2"
mypy = "^1.1.1"
ruff = "^0.1.5"
httpx = "*"
pytest = "^7.4.2"
types-requests = "^2.31.0"
requests = "^2.31.0"
pytest-cov = "^4.1.0"
pandas-stubs = "^2.0.0.230412"
types-pillow = "^9.5.0.2"
types-pyyaml = "^6.0.12.8"
types-python-jose = "^3.3.4.8"
types-passlib = "^1.7.7.13"
locust = "^2.16.1"
pytest-mock = "^3.11.1"
pytest-xdist = "^3.3.1"
types-pywin32 = "^306.0.0.4"
types-google-cloud-ndb = "^2.2.0.0"
pytest-sugar = "^0.9.7"


[tool.poetry.extras]
base = [
    "beautifulsoup4",
    "google-search-results",
    "google-api-python-client",
    "openai",
    "chromadb",
    "huggingface-hub",
    "llama-cpp-python",
    "networkx",
    "unstructured",
    "pypdf",
    "lxml",
    "pysrt",
    "fake-useragent",
    "psycopg2-binary",
    "pyarrow",
    "tiktoken",
    "wikipedia",
    "qdrant-client",
    "weaviate-client",
    "jina",
    "sentence-transformers",
    "ctransformers",
    "cohere",
    "faiss-cpu",
    "anthropic",
    "pinecone-client",
    "pymongo",
    "supabase",
    "certifi",
    "google-cloud-aiplatform",
    "psycopg",
    "psycopg-binary",
    "fastavro",
    "celery",
    "redis",
    "flower",
    "metaphor-python",
    "zep-python",
    "pywin32",
    "langfuse",
    "metal-sdk",
    "markupsafe",
    "extract-msg",
    "jq",
    "boto3",
    "numexpr",
    "qianfan",
    "pgvector",
]
deploy = ["celery", "redis", "flower"]
local = ["llama-cpp-python", "sentence-transformers", "ctransformers"]
all = ["deploy", "local", "base"]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests", "integration"]
console_output_style = "progress"
filterwarnings = ["ignore::DeprecationWarning"]
log_cli = true
markers = ["async_test"]


[tool.ruff]
exclude = ["src/backend/langflow/alembic/*"]
line-length = 120

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
