"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[399],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(s,".").concat(d)]||u[d]||g[d]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},250:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="Agents",l={unversionedId:"components/agents",id:"components/agents",title:"Agents",description:"Agents are components that use reasoning to make decisions and take actions, designed to autonomously perform tasks or provide services with some degree of \u201cfreedom\u201d (or agency). They combine the power of LLM chaining processes with access to external tools such as APIs to interact with applications and accomplish tasks.",source:"@site/docs/components/agents.mdx",sourceDirName:"components",slug:"/components/agents",permalink:"/components/agents",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Chat Interface",permalink:"/guidelines/chat-interface"},next:{title:"Chains",permalink:"/components/chains"}},s={},p=[{value:"AgentInitializer",id:"agentinitializer",level:3},{value:"CSVAgent",id:"csvagent",level:3},{value:"JSONAgent",id:"jsonagent",level:3},{value:"SQLAgent",id:"sqlagent",level:3},{value:"VectorStoreAgent",id:"vectorstoreagent",level:3},{value:"VectorStoreRouterAgent",id:"vectorstorerouteragent",level:3},{value:"ZeroShotAgent",id:"zeroshotagent",level:3}],c={toc:p},u="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"agents"},"Agents"),(0,r.kt)("p",null,"Agents are components that use reasoning to make decisions and take actions, designed to autonomously perform tasks or provide services with some degree of \u201cfreedom\u201d (or agency). They combine the power of LLM chaining processes with access to external tools such as APIs to interact with applications and accomplish tasks."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"agentinitializer"},"AgentInitializer"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"AgentInitializer")," component is a quick way to construct a zero-shot agent from a language model (LLM) and tools."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LLM:")," Language Model to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"AgentInitializer"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Memory:")," Used to add memory functionality to an agent. It allows the agent to store and retrieve information from previous conversations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Tools:")," Tools that the agent will have access to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Agent:")," The type of agent to be instantiated. Current supported: ",(0,r.kt)("inlineCode",{parentName:"li"},"zero-shot-react-description"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"react-docstore"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"self-ask-with-search,conversational-react-description")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"openai-functions"),".")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"csvagent"},"CSVAgent"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"CSVAgent")," is an agent that is designed to interact with CSV (Comma-Separated Values) files. CSV files are a common format for storing tabular data, where each row represents a record and each column represents a field. The CSV agent can perform various tasks, such as reading and writing CSV files, processing the data, and generating tables. It can extract information from the CSV file, manipulate the data, and perform operations like filtering, sorting, and aggregating."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LLM:")," Language Model to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"CSVAgent"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"path:")," The file path to the CSV data.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"jsonagent"},"JSONAgent"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"JSONAgent")," deals with JSON (JavaScript Object Notation) data. Similar to the CSVAgent, it works with a language model (LLM) and a toolkit designed for JSON manipulation. This agent can iteratively explore a JSON blob to find the information needed to answer the user's question. It can list keys, get values, and navigate through the structure of the JSON object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LLM:")," Language Model to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"JSONAgent"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Toolkit:")," Toolkit that the agent will have access to.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sqlagent"},"SQLAgent"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"SQLAgent")," is an agent that is designed to interact with SQL databases. It is capable of performing various tasks, such as querying the database, retrieving data, and executing SQL statements. The agent can provide information about the structure of the database, including the tables and their schemas. It can also perform operations like inserting, updating, and deleting data in the database. The SQL agent is a helpful tool for managing and working with SQL databases efficiently."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LLM:")," Language Model to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"SQLAgent"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"database_uri:")," A string representing the connection URI for the SQL database.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vectorstoreagent"},"VectorStoreAgent"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"VectorStoreAgent")," is designed to work with a vector store \u2013 a data structure used for storing and querying vector-based representations of data. The ",(0,r.kt)("inlineCode",{parentName:"p"},"VectorStoreAgent")," can query the vector store to find relevant information based on user inputs."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LLM:")," Language Model to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"VectorStoreAgent"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Vector Store Info:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"VectorStoreInfo")," to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"VectorStoreAgent"),".")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"vectorstorerouteragent"},"VectorStoreRouterAgent"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"VectorStoreRouterAgent")," is a custom agent that takes a vector store router as input. It is typically used when there\u2019s a need to retrieve information from multiple vector stores. These can be connected through a ",(0,r.kt)("inlineCode",{parentName:"p"},"VectorStoreRouterToolkit")," and sent over to the ",(0,r.kt)("inlineCode",{parentName:"p"},"VectorStoreRouterAgent"),". An agent configured with multiple vector stores can route queries to the appropriate store based on the context."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LLM:")," Language Model to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"VectorStoreRouterAgent"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Vector Store Router Toolkit:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"VectorStoreRouterToolkit")," to use in the ",(0,r.kt)("inlineCode",{parentName:"li"},"VectorStoreRouterAgent"),".")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"zeroshotagent"},"ZeroShotAgent"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ZeroShotAgent")," is an agent that uses the ReAct framework to determine which tool to use based solely on the tool's description. It can be configured with any number of tools and requires a description for each tool. The agent is designed to be the most general-purpose action agent. It uses an ",(0,r.kt)("inlineCode",{parentName:"p"},"LLMChain")," to determine which actions to take and in what order."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Allowed Tools:")," Tools that the agent will have access to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LLM Chain:")," LLM Chain to be used by the agent.")))}g.isMDXComponent=!0}}]);